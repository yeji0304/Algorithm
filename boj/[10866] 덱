import java.util.*;
import java.io.*;


public class Main {
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		Deque<Integer> dq = new ArrayDeque<>();
		
		int n = Integer.parseInt(br.readLine());
		
		for(int i=0; i<n; i++) {
			String s = br.readLine();
			String[] ss = s.split(" ");
			
			if(s.contains("push_front")) {
				dq.addFirst(Integer.parseInt(ss[1]));
			} else if (s.contains("push_back")) { 
				dq.addLast(Integer.parseInt(ss[1]));
			} 	else if (s.equals("pop_front")) {
				if(dq.isEmpty())
					sb.append(-1+"\n");
				else
					sb.append(dq.removeFirst()+"\n");
			}
			else if (s.equals("pop_back")) {
				if(dq.isEmpty()) {
					sb.append(-1+"\n");
				} else {
					sb.append(dq.removeLast()+"\n");
				}
			} else if (s.equals("size")) {
				sb.append(dq.size()).append("\n");
			} else if (s.equals("empty")) {
				if(dq.isEmpty()) {
					sb.append(1).append("\n");
				} else {
					sb.append(0).append("\n");
				}
			} else if (s.equals("front")) {
				if(!dq.isEmpty()) {
					sb.append(dq.peekFirst()).append("\n");
				} else {
					sb.append(-1).append("\n");
				}
			} else if (s.equals("back")) {
				if(!dq.isEmpty()) {
					sb.append(dq.peekLast()).append("\n");
				} else {
					sb.append(-1).append("\n");
				}
			}
		}
		System.out.println(sb);
	}
}
